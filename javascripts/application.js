// Generated by CoffeeScript 1.4.0
(function() {
  var desired, geocode, query, results;

  $(function() {
    return geocode('10552');
  });

  desired = [114, 151, 156, 153, 145, 144, 114, 151, 163, 164, 116, 131, 103];

  desired = [76, 105, 110, 107, 101, 100, 76, 105, 115, 116, 78, 89, 67];

  results = [];

  geocode = function(address) {
    return $.ajax({
      url: "./geocode_request.php?address=" + address,
      type: 'GET',
      success: function(data) {
        var coords, lat, lng, location;
        location = JSON.parse(data).results[0].geometry.location;
        lat = location.lat;
        lng = location.lng;
        coords = "" + lat + "," + lng;
        return query(coords);
      }
    });
  };

  query = function(coords, radius) {
    if (radius == null) {
      radius = 10000;
    }
    console.log("starting a query within " + radius + "m of '" + coords + "'");
    return $.ajax({
      type: 'GET',
      url: "./request.php",
      data: {
        location: coords,
        radius: radius,
        types: 'food',
        name: 'coffee'
      },
      success: function(data) {
        var addresses, request_results;
        request_results = JSON.parse(data).results;
        addresses = _.map(request_results, function(result) {
          var _ref;
          return (_ref = result.vicinity.match(/^\d+/)) != null ? _ref[0] : void 0;
        });
        if (addresses.length > 0) {
          console.log("we found some addresses! " + (_.compact(addresses)));
        } else {
          console.log('no addresses found :(');
        }
        return console.log(_.filter(request_results, function(result) {
          var _ref;
          return _.contains(desired, parseInt((_ref = result.vicinity.match(/^\d+/)) != null ? _ref[0] : void 0));
        }));
      }
    });
  };

}).call(this);
